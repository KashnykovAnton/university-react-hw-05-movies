{"version":3,"file":"static/js/cast-subpage.06a7c955.chunk.js","mappings":"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","sources":["components/services/movies-api.js","components/services/toast.js","components/services/utils.js","webpack://university-react-hw-05-movies/./src/pages/CastPage/CastPage.module.css?d5ae","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=a2d8ca768997315cf3e5e389a09b25a7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\n// Trending movies\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\nexport async function fetchTrendMovies() {\n  const { data } = await axios(`trending/movie/day?${API_KEY}`);\n  return data;\n}\n\n// Search movies\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchSearchMovies(value, page) {\n  const { data } = await axios(\n    `search/movie?query=${value}&page=${page}&${API_KEY}&language=en-US&include_adult=false`\n  );\n  return data;\n}\n\n// Get movie details\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieDetails({ movieId }) {\n  const { data } = await axios(`movie/${movieId}?${API_KEY}&language=en-US`);\n  return data;\n}\n\n// Get movie credits\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieCredits({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\n// Get movie reviews\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function fetchGetMovieReviews({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n","import { toast } from \"react-toastify\";\n\nexport const infoMessage = (message) => {\n  return toast.info(message, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\n\n\nexport const warningMessage = (message) => {\n    return toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };\n\n  \n  export const errorMessage = (message) => {\n    return toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };","const NO_POSTER_URL =\n  'https://cdn.pixabay.com/photo/2018/01/04/15/51/404-error-3060993_960_720.png';\nconst NO_PHOTO_URL =\n  'https://t4.ftcdn.net/jpg/01/86/29/31/240_F_186293166_P4yk3uXQBDapbDFlR17ivpM6B1ux0fHG.jpg';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const checkPath = (path, string) => {\n  switch (string) {\n    case 'poster':\n      return !path ? NO_POSTER_URL : `${BASE_URL}${path}`;\n    case 'photo':\n      return !path ? NO_PHOTO_URL : `${BASE_URL}${path}`;\n    default:\n      return;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__ievSZ\",\"CastImage\":\"CastPage_CastImage__PKh0x\",\"text\":\"CastPage_text__PjoiI\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoaderSpin from 'components/Loader/LoaderSpin';\nimport { errorMessage } from 'components/services/toast';\nimport { fetchGetMovieCredits } from 'components/services/movies-api';\nimport { checkPath } from 'components/services/utils';\nimport styles from './CastPage.module.css';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCredits = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchGetMovieCredits({ movieId });\n        if (!cast) {\n          return;\n        }\n        setCredits(cast);\n      } catch (error) {\n        errorMessage(`Something went wrong: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderSpin />\n      ) : (\n        credits.length === 0 && <p>We don't have information about cast!</p>\n      )}\n      {credits.length !== 0 && (\n        <ul className={styles.list}>\n          {credits.map(el => {\n            return (\n              <li key={el.cast_id}>\n                <img\n                  src={checkPath(el.profile_path, 'photo')}\n                  alt={el.name}\n                  width=\"120px\"\n                  className={styles.CastImage}\n                />\n                <h4>Name</h4>\n                <p className={styles.text}>{el.name}</p>\n                <h4>Character</h4>\n                <p className={styles.text}>{el.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","async","fetchTrendMovies","data","axios","concat","fetchSearchMovies","value","page","fetchGetMovieDetails","_ref","movieId","fetchGetMovieCredits","_ref2","fetchGetMovieReviews","_ref3","defaults","baseURL","infoMessage","message","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","warningMessage","warning","errorMessage","error","BASE_URL","checkPath","path","string","Cast","credits","setCredits","useState","isLoading","setIsLoading","useParams","useEffect","cast","getCredits","_jsxs","_Fragment","children","_jsx","LoaderSpin","length","className","styles","map","el","src","profile_path","alt","name","width","character","cast_id"],"sourceRoot":""}