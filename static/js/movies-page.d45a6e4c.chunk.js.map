{"version":3,"file":"static/js/movies-page.d45a6e4c.chunk.js","mappings":"iNACA,SAAgB,OAAS,6BAA6B,KAAO,2BAA2B,OAAS,6BAA6B,MAAQ,6B,aCGtI,MAsCA,EAtCqBA,IAAwB,IAAvB,cAAEC,GAAeD,EACrC,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAgB/C,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAOC,OAAOC,UAC/BC,EAAAA,EAAAA,MAAA,QAAMJ,UAAWC,EAAOI,KAAMC,SAZbC,IACnBA,EAAEC,iBACyB,KAAvBZ,EAAYa,QACdC,EAAAA,EAAAA,IAAe,2BAEff,EAAcC,GAEhBC,EAAe,GAAG,EAKqCM,SAAA,EACnDJ,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASX,UAAWC,EAAOW,OAAOT,UAC7CJ,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAOY,YAAYV,SAAC,cAGvCJ,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAOa,MAClBH,KAAK,OACLI,MAAOnB,EACPoB,SAzBaT,IACnBV,EAAeU,EAAEU,OAAOF,MAAMG,cAAc,EAyBtCC,aAAa,MACbC,WAAS,EACTC,YAAY,iCAGT,E,+BCrCb,QAAuB,yBAAvB,EAAuD,yBAAvD,EAA0F,4BAA1F,EAA6H,yBAA7H,EAAkK,8BAAlK,EAAyM,2BCmGzM,EA3FmBC,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAa5B,EAAAA,EAAAA,UAAS,KAC9B6B,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAMC,IAAWjC,EAAAA,EAAAA,UAASkC,OAAOL,EAAaM,IAAI,UAAY,IAC9DC,EAAYC,IAAiBrC,EAAAA,EAAAA,UAAS,IACtCsC,EAAWC,IAAgBvC,EAAAA,EAAAA,WAAS,GAErCwC,EAAQX,EAAaM,IAAI,UAE/BM,EAAAA,EAAAA,YAAU,KACR,IAAKD,EACH,OAEgBE,WAChB,IACEH,GAAa,GACb,MAAM,QAAEI,EAAO,YAAEC,SAAsBC,EAAAA,EAAAA,IAAkBL,EAAOR,GAChE,GAAuB,IAAnBW,EAAQG,OAKV,OAJAlB,GAAUmB,GACc,IAAtBA,EAAWD,OAAe,IAAIC,KAAeJ,GAAWA,SAE1DN,EAAcO,IAGhBI,EAAAA,EAAAA,IAAY,oDACd,CAAE,MAAOC,IACPC,EAAAA,EAAAA,IAAa,yBAADC,OAA0BF,EAAMG,SAC9C,CAAC,QACCb,GAAa,EACf,GAEFc,EAAW,GACV,CAACrB,EAAMQ,IAeV,OACElC,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACEJ,EAAAA,EAAAA,KAACsD,EAAY,CAAC1D,cAfIoB,IACpBgB,EAAQ,GACRI,EAAc,GACdT,EAAU,IACVE,EAAgB,CAAEU,MAAOvB,EAAOe,KAAM,GAAI,IAYvCM,IAAarC,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,KACzBlD,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYE,SACxBsB,EAAO8B,KAAI7D,IAAgD,IAA/C,GAAE8D,EAAE,eAAEC,EAAc,KAAEC,EAAI,YAAEC,GAAajE,EACpD,OACEK,EAAAA,EAAAA,KAAA,MAAaC,UAAWC,EAAYE,UAClCJ,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CACHC,GAAE,GAAAZ,OAAK1B,EAASuC,SAAQ,KAAAb,OAAIO,GAC5BO,MAAOxC,EACPvB,UAAWC,EAAYE,UAEvBC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAeE,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,OACEiE,KAAKC,EAAAA,EAAAA,GAAUN,EAAa,UAC5BO,IAAKT,EACLU,MAAM,WAERpE,EAAAA,EAAAA,KAAA,KAAAI,SAAkB,OAAdsD,QAAc,IAAdA,EAAAA,EAAkBC,UAZnBF,EAeJ,MAIV1B,IAASI,IACRnC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBE,UAC/BJ,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXU,KAAK,SACLyD,QAtCQC,KAClBtC,GAAQuC,GAAYA,EAAW,IAC/B,MAAMC,EAAaC,OAAOC,YAAY,IAAI9C,IAC1CC,EAAgB,IAAK2C,EAAYzC,KAAME,OAAOF,GAAQ,GAAI,EAmC3B3B,SACtB,oBAMN,C,mFC9FP,MAAMuE,EAAU,2CAQTlC,eAAemC,IACpB,MAAM,KAACC,SAAcC,EAAAA,EAAAA,GAAM,sBAAD5B,OAAuByB,IACjD,OAAOE,CACT,CAIOpC,eAAeG,EAAkB5B,EAAOe,GAC7C,MAAM,KAAC8C,SAAcC,EAAAA,EAAAA,GAAM,sBAAD5B,OAAuBlC,EAAK,UAAAkC,OAASnB,EAAI,KAAAmB,OAAIyB,EAAO,wCAC9E,OAAOE,CACT,CAIOpC,eAAesC,EAAoBpF,GAAe,IAAd,QAAEqF,GAASrF,EACpD,MAAM,KAAEkF,SAAeC,EAAAA,EAAAA,GAAM,SAAD5B,OAAU8B,EAAO,KAAA9B,OAAIyB,EAAO,oBACxD,OAAOE,CACT,CAIOpC,eAAewC,EAAoBC,GAAe,IAAd,QAAEF,GAASE,EACpD,MAAM,KAAEL,SAAeC,EAAAA,EAAAA,GAAM,SAAD5B,OACjB8B,EAAO,aAAA9B,OAAYyB,EAAO,oBAErC,OAAOE,CACT,CAIOpC,eAAe0C,EAAoBC,GAAe,IAAd,QAAEJ,GAASI,EACpD,MAAM,KAAEP,SAAeC,EAAAA,EAAAA,GAAM,SAAD5B,OACjB8B,EAAO,aAAA9B,OAAYyB,EAAO,2BAErC,OAAOE,CACT,CAxCAC,EAAAA,EAAMO,SAASC,QAFE,+B,iECDV,MAAMvC,EAAeI,GACnBoC,EAAAA,GAAMC,KAAKrC,EAAS,CACzBsC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKEpF,EAAkBwC,GACpBoC,EAAAA,GAAMS,QAAQ7C,EAAS,CAC5BsC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKE9C,EAAgBE,GACpBoC,EAAAA,GAAMvC,MAAMG,EAAS,CAC1BsC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,W,iCCpCb,MAIME,EAAW,kCAEJ/B,EAAYA,CAACgC,EAAMC,KAC9B,OAAQA,GACN,IAAK,SACH,OAAQD,EAAoB,GAAAhD,OAAM+C,GAAQ/C,OAAGgD,GARjD,+EASE,IAAK,QACH,OAAQA,EAAmB,GAAAhD,OAAM+C,GAAQ/C,OAAGgD,GARhD,4FASE,QACE,OACJ,C","sources":["webpack://university-react-hw-05-movies/./src/components/Pages/MoviesSearch/MoviesSearch.module.css?9d50","components/Pages/MoviesSearch/MoviesSearch.jsx","webpack://university-react-hw-05-movies/./src/components/Pages/MoviesPage/MoviesPage.module.css?1df9","components/Pages/MoviesPage/MoviesPage.jsx","components/services/movies-api.js","components/services/toast.js","components/services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MoviesSearch_header__bsvIv\",\"form\":\"MoviesSearch_form__QuclE\",\"button\":\"MoviesSearch_button__JylFS\",\"input\":\"MoviesSearch_input__96D7X\"};","import { useState } from 'react';\nimport { warningMessage } from 'components/services/toast';\nimport styles from './MoviesSearch.module.css';\n\nconst MoviesSearch = ({ onValueSubmit }) => {\n  const [valueSearch, setValueSearch] = useState('');\n\n  const handleChange = e => {\n    setValueSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (valueSearch.trim() === '') {\n      warningMessage('Please, type something!');\n    } else {\n      onValueSubmit(valueSearch);\n    }\n    setValueSearch('');\n  };\n\n  return (\n    <header className={styles.header}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={valueSearch}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default MoviesSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__Yo2EH\",\"item\":\"MoviesPage_item__H-akw\",\"itemDiv\":\"MoviesPage_itemDiv__7MnNr\",\"link\":\"MoviesPage_link__Ys7Iy\",\"divButton\":\"MoviesPage_divButton__YUosY\",\"button\":\"MoviesPage_button__d4DHw\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesSearch from '../MoviesSearch/MoviesSearch';\nimport LoaderSpin from 'components/Loader/LoaderSpin';\nimport { infoMessage, errorMessage } from 'components/services/toast';\nimport { fetchSearchMovies } from 'components/services/movies-api';\nimport { checkPath } from 'components/services/utils';\nimport styles from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(Number(searchParams.get('page')) || 1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results, total_pages } = await fetchSearchMovies(query, page);\n        if (results.length !== 0) {\n          setMovies(prevMovies =>\n            prevMovies.length !== 0 ? [...prevMovies, ...results] : results\n          );\n          setTotalPages(total_pages);\n          return;\n        }\n        infoMessage('Unfortunately, there are no movies with this name');\n      } catch (error) {\n        errorMessage(`Something went wrong: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [page, query]);\n\n  const onSearchValue = value => {\n    setPage(1);\n    setTotalPages(1);\n    setMovies([]);\n    setSearchParams({ query: value, page: 1 });\n  };\n\n  const handleClick = () => {\n    setPage(prevPage => prevPage + 1);\n    const prevParams = Object.fromEntries([...searchParams]);\n    setSearchParams({ ...prevParams, page: Number(page) + 1 });\n  };\n\n  return (\n    <>\n      <MoviesSearch onValueSubmit={onSearchValue} />\n      {isLoading && <LoaderSpin />}\n      <>\n        <ul className={styles.list}>\n          {movies.map(({ id, original_title, name, poster_path }) => {\n            return (\n              <li key={id} className={styles.item}>\n                <Link\n                  to={`${location.pathname}/${id}`}\n                  state={location}\n                  className={styles.link}\n                >\n                  <div className={styles.itemDiv}>\n                    <img\n                      src={checkPath(poster_path, 'poster')}\n                      alt={original_title}\n                      width=\"240px\"\n                    />\n                    <p>{original_title ?? name}</p>\n                  </div>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n        {page !== totalPages && (\n          <div className={styles.divButton}>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={handleClick}\n            >\n              LoadMore\n            </button>\n          </div>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=a2d8ca768997315cf3e5e389a09b25a7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\n\n// Trending movies\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\nexport async function fetchTrendMovies() {\n  const {data} = await axios(`trending/movie/day?${API_KEY}`);\n  return data;\n}\n\n// Search movies\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchSearchMovies(value, page) {\n  const {data} = await axios(`search/movie?query=${value}&page=${page}&${API_KEY}&language=en-US&include_adult=false`);\n  return data\n}\n\n// Get movie details\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieDetails({ movieId }) {\n  const { data } = await axios(`movie/${movieId}?${API_KEY}&language=en-US`);\n  return data;\n}\n\n// Get movie credits\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieCredits({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\n// Get movie reviews\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function fetchGetMovieReviews({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n}","import { toast } from \"react-toastify\";\n\nexport const infoMessage = (message) => {\n  return toast.info(message, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\n\n\nexport const warningMessage = (message) => {\n    return toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };\n\n  \n  export const errorMessage = (message) => {\n    return toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };","const NO_POSTER_URL =\n  'https://cdn.pixabay.com/photo/2018/01/04/15/51/404-error-3060993_960_720.png';\nconst NO_PHOTO_URL =\n  'https://t4.ftcdn.net/jpg/01/86/29/31/240_F_186293166_P4yk3uXQBDapbDFlR17ivpM6B1ux0fHG.jpg';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const checkPath = (path, string) => {\n  switch (string) {\n    case 'poster':\n      return !path ? NO_POSTER_URL : `${BASE_URL}${path}`;\n    case 'photo':\n      return !path ? NO_PHOTO_URL : `${BASE_URL}${path}`;\n    default:\n      return;\n  }\n};\n"],"names":["_ref","onValueSubmit","valueSearch","setValueSearch","useState","_jsx","className","styles","header","children","_jsxs","form","onSubmit","e","preventDefault","trim","warningMessage","type","button","buttonLabel","input","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","location","useLocation","movies","setMovies","searchParams","setSearchParams","useSearchParams","page","setPage","Number","get","totalPages","setTotalPages","isLoading","setIsLoading","query","useEffect","async","results","total_pages","fetchSearchMovies","length","prevMovies","infoMessage","error","errorMessage","concat","message","getMovies","_Fragment","MoviesSearch","LoaderSpin","map","id","original_title","name","poster_path","Link","to","pathname","state","src","checkPath","alt","width","onClick","handleClick","prevPage","prevParams","Object","fromEntries","API_KEY","fetchTrendMovies","data","axios","fetchGetMovieDetails","movieId","fetchGetMovieCredits","_ref2","fetchGetMovieReviews","_ref3","defaults","baseURL","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","warning","BASE_URL","path","string"],"sourceRoot":""}