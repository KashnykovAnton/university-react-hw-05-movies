{"version":3,"file":"static/js/movie-details-page.648082cd.chunk.js","mappings":"4OACA,QAAwC,gDAAxC,EAAiG,iCAAjG,EAAyI,+BAAzI,EAAgL,gCAAhL,EAA6N,qCAA7N,EAAyQ,+B,aCazQ,MAiFA,EAjFyBA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAOH,IAChB,QAAEI,IAAYC,EAAAA,EAAAA,MACbC,EAAOC,IAAmBC,EAAAA,EAAAA,UAAS,KACnCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IAE3CG,EAAAA,EAAAA,YAAU,KACgBC,WACtB,IACEF,GAAa,GACb,MAAMG,QAAaC,EAAAA,EAAAA,IAAqB,CAAEV,YAC1C,IAAKS,EACH,OAEFN,EAAgBM,EAClB,CAAE,MAAOE,IACPC,EAAAA,EAAAA,IAAa,yBAADC,OAA0BF,EAAMG,SAC9C,CAAC,QACCR,GAAa,EACf,GAEFS,EAAiB,GAChB,CAACf,IAMJ,OACEgB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA6BC,SAAA,CAC1Cd,IAAae,EAAAA,EAAAA,KAACC,EAAAA,EAAU,IACP,IAAjBnB,EAAMoB,SACLN,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAJ,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXM,KAAK,SACLC,QAZWC,KAAO,IAADC,EACzBjC,EAA6B,QAArBiC,EAAC7B,EAAO8B,QAAQC,aAAK,IAAAF,EAAAA,EAAI,IAAI,EAWPR,SACvB,aAGDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OACEU,KAAKC,EAAAA,EAAAA,GAAU7B,EAAM8B,YAAa,UAClCC,IAAK/B,EAAMgC,MACXC,MAAM,WAERnB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAEjB,EAAMgC,SACpCd,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CACGjB,EAAMkC,aAAa,MAAIlC,EAAMmC,eAEhCjB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjB,EAAMoC,cAAgBpC,EAAMqC,kBAChCnB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjB,EAAMsC,YACVpB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkBC,SAC9BjB,EAAMuC,OAAOC,KAAIC,IAAmB,IAAlB,GAAEC,EAAE,KAAEC,GAAMF,EAC7B,OAAOvB,EAAAA,EAAAA,KAAA,MAAAD,SAAc0B,GAALD,EAAe,aAKvCxB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAG,OAAM5B,UACbC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAYC,SAAC,YAE7BC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAG,UAAS5B,UAChBC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAYC,SAAC,eAE7BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,SAGP,C,mFCzFV,MAAMC,EAAU,2CAQTzC,eAAe0C,IACpB,MAAM,KAACzC,SAAc0C,EAAAA,EAAAA,GAAM,sBAADtC,OAAuBoC,IACjD,OAAOxC,CACT,CAIOD,eAAe4C,EAAkBC,EAAOC,GAC7C,MAAM,KAAC7C,SAAc0C,EAAAA,EAAAA,GAAM,sBAADtC,OAAuBwC,EAAK,UAAAxC,OAASyC,EAAI,KAAAzC,OAAIoC,EAAO,wCAC9E,OAAOxC,CACT,CAIOD,eAAeE,EAAoBiC,GAAe,IAAd,QAAE3C,GAAS2C,EACpD,MAAM,KAAElC,SAAe0C,EAAAA,EAAAA,GAAM,SAADtC,OAAUb,EAAO,KAAAa,OAAIoC,EAAO,oBACxD,OAAOxC,CACT,CAIOD,eAAe+C,EAAoBC,GAAe,IAAd,QAAExD,GAASwD,EACpD,MAAM,KAAE/C,SAAe0C,EAAAA,EAAAA,GAAM,SAADtC,OACjBb,EAAO,aAAAa,OAAYoC,EAAO,oBAErC,OAAOxC,CACT,CAIOD,eAAeiD,EAAoBC,GAAe,IAAd,QAAE1D,GAAS0D,EACpD,MAAM,KAAEjD,SAAe0C,EAAAA,EAAAA,GAAM,SAADtC,OACjBb,EAAO,aAAAa,OAAYoC,EAAO,2BAErC,OAAOxC,CACT,CAxCA0C,EAAAA,EAAMQ,SAASC,QAFE,+B,iECDV,MAAMC,EAAe/C,GACnBgD,EAAAA,GAAMC,KAAKjD,EAAS,CACzBkD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKEC,EAAkBzD,GACpBgD,EAAAA,GAAMU,QAAQ1D,EAAS,CAC5BkD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKE1D,EAAgBE,GACpBgD,EAAAA,GAAMnD,MAAMG,EAAS,CAC1BkD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,W,iCCpCb,MAIMG,EAAW,kCAEJ1C,EAAYA,CAAC2C,EAAMC,KAC9B,OAAQA,GACN,IAAK,SACH,OAAQD,EAAoB,GAAA7D,OAAM4D,GAAQ5D,OAAG6D,GARjD,+EASE,IAAK,QACH,OAAQA,EAAmB,GAAA7D,OAAM4D,GAAQ5D,OAAG6D,GARhD,4FASE,QACE,OACJ,C","sources":["webpack://university-react-hw-05-movies/./src/components/Pages/MovieDetailsPage/MovieDetailsPage.module.css?2404","components/Pages/MovieDetailsPage/MovieDetailsPage.jsx","components/services/movies-api.js","components/services/toast.js","components/services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsContainer\":\"MovieDetailsPage_MovieDetailsContainer__mHrnw\",\"button\":\"MovieDetailsPage_button__9m-Hc\",\"card\":\"MovieDetailsPage_card__YDtVH\",\"title\":\"MovieDetailsPage_title__cKBtH\",\"genresList\":\"MovieDetailsPage_genresList__shC7b\",\"link\":\"MovieDetailsPage_link__WJDEq\"};","import { useState, useEffect, useRef } from 'react';\nimport {\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n  Outlet,\n} from 'react-router-dom';\nimport { fetchGetMovieDetails } from 'components/services/movies-api';\nimport { errorMessage } from 'components/services/toast';\nimport { checkPath } from 'components/services/utils';\nimport LoaderSpin from 'components/Loader/LoaderSpin';\nimport styles from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const goBack = useRef(location);\n  const { movieId } = useParams();\n  const [movie, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchGetMovieDetails({ movieId });\n        if (!data) {\n          return;\n        }\n        setMovieDetails(data);\n      } catch (error) {\n        errorMessage(`Something went wrong: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(goBack.current.state ?? '/');\n  };\n\n  return (\n    <div className={styles.MovieDetailsContainer}>\n      {isLoading && <LoaderSpin />}\n      {movie.length !== 0 && (\n        <>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={handleGoBack}\n          >\n            Go back\n          </button>\n          <div className={styles.card}>\n            <img\n              src={checkPath(movie.poster_path, 'poster')}\n              alt={movie.title}\n              width=\"240px\"\n            />\n            <div>\n              <h2 className={styles.title}>{movie.title}</h2>\n              <h4>Vote average / Vote count</h4>\n              <p>\n                {movie.vote_average} / {movie.vote_count}\n              </p>\n              <h4>Release date</h4>\n              <p>{movie.release_date || movie.first_air_date}</p>\n              <h4>Overview</h4>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <ul className={styles.genresList}>\n                {movie.genres.map(({ id, name }) => {\n                  return <li key={id}>{name}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n          <hr />\n          <Link to=\"cast\">\n            <p className={styles.link}>Cast</p>\n          </Link>\n          <Link to=\"reviews\">\n            <p className={styles.link}>Reviews</p>\n          </Link>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=a2d8ca768997315cf3e5e389a09b25a7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\n\n// Trending movies\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\nexport async function fetchTrendMovies() {\n  const {data} = await axios(`trending/movie/day?${API_KEY}`);\n  return data;\n}\n\n// Search movies\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchSearchMovies(value, page) {\n  const {data} = await axios(`search/movie?query=${value}&page=${page}&${API_KEY}&language=en-US&include_adult=false`);\n  return data\n}\n\n// Get movie details\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieDetails({ movieId }) {\n  const { data } = await axios(`movie/${movieId}?${API_KEY}&language=en-US`);\n  return data;\n}\n\n// Get movie credits\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieCredits({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\n// Get movie reviews\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function fetchGetMovieReviews({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n}","import { toast } from \"react-toastify\";\n\nexport const infoMessage = (message) => {\n  return toast.info(message, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\n\n\nexport const warningMessage = (message) => {\n    return toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };\n\n  \n  export const errorMessage = (message) => {\n    return toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };","const NO_POSTER_URL =\n  'https://cdn.pixabay.com/photo/2018/01/04/15/51/404-error-3060993_960_720.png';\nconst NO_PHOTO_URL =\n  'https://t4.ftcdn.net/jpg/01/86/29/31/240_F_186293166_P4yk3uXQBDapbDFlR17ivpM6B1ux0fHG.jpg';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const checkPath = (path, string) => {\n  switch (string) {\n    case 'poster':\n      return !path ? NO_POSTER_URL : `${BASE_URL}${path}`;\n    case 'photo':\n      return !path ? NO_PHOTO_URL : `${BASE_URL}${path}`;\n    default:\n      return;\n  }\n};\n"],"names":["MovieDetailsPage","navigate","useNavigate","location","useLocation","goBack","useRef","movieId","useParams","movie","setMovieDetails","useState","isLoading","setIsLoading","useEffect","async","data","fetchGetMovieDetails","error","errorMessage","concat","message","getMovieDetails","_jsxs","className","styles","children","_jsx","LoaderSpin","length","_Fragment","type","onClick","handleGoBack","_goBack$current$state","current","state","src","checkPath","poster_path","alt","title","width","vote_average","vote_count","release_date","first_air_date","overview","genres","map","_ref","id","name","Link","to","Outlet","API_KEY","fetchTrendMovies","axios","fetchSearchMovies","value","page","fetchGetMovieCredits","_ref2","fetchGetMovieReviews","_ref3","defaults","baseURL","infoMessage","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","warningMessage","warning","BASE_URL","path","string"],"sourceRoot":""}