{"version":3,"file":"static/js/reviews-subpage.928f6740.chunk.js","mappings":"+MAEA,MAAMA,EAAU,2CAOTC,eAAeC,IACpB,MAAM,KAAEC,SAAeC,EAAAA,EAAAA,GAAM,sBAADC,OAAuBL,IACnD,OAAOG,CACT,CAIOF,eAAeK,EAAkBC,EAAOC,GAC7C,MAAM,KAAEL,SAAeC,EAAAA,EAAAA,GAAM,sBAADC,OACJE,EAAK,UAAAF,OAASG,EAAI,KAAAH,OAAIL,EAAO,wCAErD,OAAOG,CACT,CAIOF,eAAeQ,EAAoBC,GAAe,IAAd,QAAEC,GAASD,EACpD,MAAM,KAAEP,SAAeC,EAAAA,EAAAA,GAAM,SAADC,OAAUM,EAAO,KAAAN,OAAIL,EAAO,oBACxD,OAAOG,CACT,CAIOF,eAAeW,EAAoBC,GAAe,IAAd,QAAEF,GAASE,EACpD,MAAM,KAAEV,SAAeC,EAAAA,EAAAA,GAAM,SAADC,OACjBM,EAAO,aAAAN,OAAYL,EAAO,oBAErC,OAAOG,CACT,CAIOF,eAAea,EAAoBC,GAAe,IAAd,QAAEJ,GAASI,EACpD,MAAM,KAAEZ,SAAeC,EAAAA,EAAAA,GAAM,SAADC,OACjBM,EAAO,aAAAN,OAAYL,EAAO,2BAErC,OAAOG,CACT,CAzCAC,EAAAA,EAAMY,SAASC,QAFE,+B,iECDV,MAAMC,EAAeC,GACnBC,EAAAA,GAAMC,KAAKF,EAAS,CACzBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKEC,EAAkBV,GACpBC,EAAAA,GAAMU,QAAQX,EAAS,CAC5BG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAKEG,EAAgBZ,GACpBC,EAAAA,GAAMY,MAAMb,EAAS,CAC1BG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,W,8FCnCb,QAAyB,4BAAzB,EAA8D,4BAA9D,EAAiG,0B,aCMjG,MA8CA,EA9CgBK,KACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACrC,QAAEzB,IAAY4B,EAAAA,EAAAA,KAoBpB,OAlBAC,EAAAA,EAAAA,YAAU,KACWvC,WACjB,IACEqC,GAAa,GACb,MAAM,QAAEG,SAAkB3B,EAAAA,EAAAA,IAAqB,CAAEH,YACjD,IAAK8B,EACH,OAEFN,EAAWM,EACb,CAAE,MAAOT,IACPD,EAAAA,EAAAA,IAAa,yBAAD1B,OAA0B2B,EAAMb,SAC9C,CAAC,QACCmB,GAAa,EACf,GAEFI,EAAY,GACX,CAAC/B,KAGFgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGR,GACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAU,IAEQ,IAAnBb,EAAQc,SAAgBF,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAET,IAAnBX,EAAQc,SACPF,EAAAA,EAAAA,KAAA,MAAAD,SACGX,EAAQe,KAAIC,IAETP,EAAAA,EAAAA,MAAA,MAAgBQ,UAAWC,EAAcP,SAAA,EACvCF,EAAAA,EAAAA,MAAA,KAAGQ,UAAWC,EAAcP,SAAA,CAAC,WAASK,EAAGG,WACzCP,EAAAA,EAAAA,KAAA,KAAGK,UAAWC,EAAYP,SAAEK,EAAGI,YAFxBJ,EAAGK,UAQnB,C","sources":["components/services/movies-api.js","components/services/toast.js","webpack://university-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=a2d8ca768997315cf3e5e389a09b25a7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\n\n// Trending movies\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\nexport async function fetchTrendMovies() {\n  const { data } = await axios(`trending/movie/day?${API_KEY}`);\n  return data;\n}\n\n// Search movies\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function fetchSearchMovies(value, page) {\n  const { data } = await axios(\n    `search/movie?query=${value}&page=${page}&${API_KEY}&language=en-US&include_adult=false`\n  );\n  return data;\n}\n\n// Get movie details\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieDetails({ movieId }) {\n  const { data } = await axios(`movie/${movieId}?${API_KEY}&language=en-US`);\n  return data;\n}\n\n// Get movie credits\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function fetchGetMovieCredits({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\n// Get movie reviews\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function fetchGetMovieReviews({ movieId }) {\n  const { data } = await axios(\n    `movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n","import { toast } from \"react-toastify\";\n\nexport const infoMessage = (message) => {\n  return toast.info(message, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\n\n\nexport const warningMessage = (message) => {\n    return toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };\n\n  \n  export const errorMessage = (message) => {\n    return toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: \"colored\",\n    });\n  };","// extracted by mini-css-extract-plugin\nexport default {\"review\":\"ReviewsPage_review__oed5a\",\"author\":\"ReviewsPage_author__yUGMj\",\"text\":\"ReviewsPage_text__JDMhb\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoaderSpin from 'components/Loader/LoaderSpin';\nimport { fetchGetMovieReviews } from 'components/services/movies-api';\nimport { errorMessage } from 'components/services/toast';\nimport styles from './ReviewsPage.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchGetMovieReviews({ movieId });\n        if (!results) {\n          return;\n        }\n        setReviews(results);\n      } catch (error) {\n        errorMessage(`Something went wrong: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderSpin />\n      ) : (\n        reviews.length === 0 && <p>We don't have reviews yet!</p>\n      )}\n      {reviews.length !== 0 && (\n        <ul>\n          {reviews.map(el => {\n            return (\n              <li key={el.id} className={styles.review}>\n                <p className={styles.author}>Author: {el.author}</p>\n                <p className={styles.text}>{el.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","async","fetchTrendMovies","data","axios","concat","fetchSearchMovies","value","page","fetchGetMovieDetails","_ref","movieId","fetchGetMovieCredits","_ref2","fetchGetMovieReviews","_ref3","defaults","baseURL","infoMessage","message","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","warningMessage","warning","errorMessage","error","Reviews","reviews","setReviews","useState","isLoading","setIsLoading","useParams","useEffect","results","getReviews","_jsxs","_Fragment","children","_jsx","LoaderSpin","length","map","el","className","styles","author","content","id"],"sourceRoot":""}